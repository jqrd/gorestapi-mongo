basePath: /api/v1
definitions:
  model.WidgetType:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - WidgetType_Unspecified
    - WidgetType_Type1
    - WidgetType_Type2
    - WidgetType_Special
  render.ErrResponse:
    properties:
      error:
        type: string
      request_id:
        type: string
      status:
        type: string
    type: object
  svc.Thing:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      widgets:
        items:
          $ref: '#/definitions/svc.ThingWidget'
        type: array
    type: object
  svc.ThingWidget:
    properties:
      name:
        type: string
      type:
        $ref: '#/definitions/model.WidgetType'
      widgetId:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /things:
    get:
      description: Find things
      operationId: Find
      parameters:
      - description: query
        in: query
        name: q
        type: string
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/svc.Thing'
            type: array
        "400":
          description: Invalid Argument
          schema:
            $ref: '#/definitions/render.ErrResponse'
        "500":
          description: Internal Error
          schema:
            $ref: '#/definitions/render.ErrResponse'
      summary: Find things
      tags:
      - things
    post:
      description: Create a thing
      operationId: ThingsAPI.Create
      parameters:
      - description: Thing
        in: body
        name: thing
        required: true
        schema:
          $ref: '#/definitions/svc.Thing'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/svc.Thing'
        "400":
          description: Invalid Argument
          schema:
            $ref: '#/definitions/render.ErrResponse'
        "500":
          description: Internal Error
          schema:
            $ref: '#/definitions/render.ErrResponse'
      summary: Create a thing
      tags:
      - things
  /things/{id}:
    delete:
      description: Delete a thing
      operationId: ThingsAPI.DeleteByID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Success
        "400":
          description: Invalid Argument
          schema:
            $ref: '#/definitions/render.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/render.ErrResponse'
        "500":
          description: Internal Error
          schema:
            $ref: '#/definitions/render.ErrResponse'
      summary: Delete thing
      tags:
      - things
    get:
      description: Get a thing
      operationId: ThingsAPI.GetByID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/svc.Thing'
        "400":
          description: Invalid Argument
          schema:
            $ref: '#/definitions/render.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/render.ErrResponse'
        "500":
          description: Internal Error
          schema:
            $ref: '#/definitions/render.ErrResponse'
      summary: Get thing
      tags:
      - things
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
